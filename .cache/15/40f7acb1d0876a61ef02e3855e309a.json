{"id":"zgTr","dependencies":[{"name":"/home/nessi/Documents/OpenSource/Meraki/fingerpaint/node_modules/@react-dnd/invariant/dist/invariant.esm.js.map","includedInParent":true,"mtime":1637738791344},{"name":"/home/nessi/Documents/OpenSource/Meraki/fingerpaint/package.json","includedInParent":true,"mtime":1637783939942},{"name":"/home/nessi/Documents/OpenSource/Meraki/fingerpaint/node_modules/@react-dnd/invariant/package.json","includedInParent":true,"mtime":1637738791344}],"generated":{"js":"\"use strict\";function e(e,r){for(var n=arguments.length,i=new Array(n>2?n-2:0),o=2;o<n;o++)i[o-2]=arguments[o];if(!e){var t;if(void 0===r)t=new Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var a=0;(t=new Error(r.replace(/%s/g,function(){return i[a++]}))).name=\"Invariant Violation\"}throw t.framesToPop=1,t}}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.invariant=e;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/index.ts","name":"error","original":{"line":37,"column":10},"generated":{"line":1,"column":0}},{"source":"../src/index.ts","name":null,"original":{"line":12,"column":0},"generated":{"line":1,"column":13}},{"source":"../src/index.ts","name":"invariant","original":{"line":12,"column":16},"generated":{"line":1,"column":22}},{"source":"../src/index.ts","name":"condition","original":{"line":12,"column":26},"generated":{"line":1,"column":24}},{"source":"../src/index.ts","name":"format","original":{"line":12,"column":42},"generated":{"line":1,"column":26}},{"source":"../src/index.ts","name":"args","original":{"line":12,"column":61},"generated":{"line":1,"column":29}},{"source":"../src/index.ts","name":"args","original":{"line":12,"column":61},"generated":{"line":1,"column":33}},{"source":"../src/index.ts","name":"args","original":{"line":12,"column":61},"generated":{"line":1,"column":37}},{"source":"../src/index.ts","name":"args","original":{"line":12,"column":61},"generated":{"line":1,"column":39}},{"source":"../src/index.ts","name":"args","original":{"line":12,"column":61},"generated":{"line":1,"column":49}},{"source":"../src/index.ts","name":"args","original":{"line":12,"column":61},"generated":{"line":1,"column":56}},{"source":"../src/index.ts","name":"args","original":{"line":12,"column":61},"generated":{"line":1,"column":58}},{"source":"../src/index.ts","name":"args","original":{"line":12,"column":61},"generated":{"line":1,"column":62}},{"source":"../src/index.ts","name":"args","original":{"line":12,"column":61},"generated":{"line":1,"column":68}},{"source":"../src/index.ts","name":"args","original":{"line":12,"column":61},"generated":{"line":1,"column":70}},{"source":"../src/index.ts","name":"args","original":{"line":12,"column":61},"generated":{"line":1,"column":72}},{"source":"../src/index.ts","name":"args","original":{"line":12,"column":61},"generated":{"line":1,"column":74}},{"source":"../src/index.ts","name":"args","original":{"line":12,"column":61},"generated":{"line":1,"column":76}},{"source":"../src/index.ts","name":"args","original":{"line":12,"column":61},"generated":{"line":1,"column":79}},{"source":"../src/index.ts","name":"args","original":{"line":12,"column":61},"generated":{"line":1,"column":81}},{"source":"../src/index.ts","name":"args","original":{"line":12,"column":61},"generated":{"line":1,"column":83}},{"source":"../src/index.ts","name":"args","original":{"line":12,"column":61},"generated":{"line":1,"column":85}},{"source":"../src/index.ts","name":"args","original":{"line":12,"column":61},"generated":{"line":1,"column":87}},{"source":"../src/index.ts","name":"args","original":{"line":12,"column":61},"generated":{"line":1,"column":91}},{"source":"../src/index.ts","name":"args","original":{"line":12,"column":61},"generated":{"line":1,"column":93}},{"source":"../src/index.ts","name":"args","original":{"line":12,"column":61},"generated":{"line":1,"column":95}},{"source":"../src/index.ts","name":"args","original":{"line":12,"column":61},"generated":{"line":1,"column":98}},{"source":"../src/index.ts","name":"args","original":{"line":12,"column":61},"generated":{"line":1,"column":108}},{"source":"../src/index.ts","name":null,"original":{"line":19,"column":6},"generated":{"line":1,"column":111}},{"source":"../src/index.ts","name":"condition","original":{"line":19,"column":7},"generated":{"line":1,"column":115}},{"source":"../src/index.ts","name":null,"original":{"line":19,"column":18},"generated":{"line":1,"column":117}},{"source":"../src/index.ts","name":"error","original":{"line":20,"column":8},"generated":{"line":1,"column":118}},{"source":"../src/index.ts","name":"error","original":{"line":20,"column":8},"generated":{"line":1,"column":122}},{"source":"../src/index.ts","name":"format","original":{"line":21,"column":8},"generated":{"line":1,"column":124}},{"source":"../src/index.ts","name":"undefined","original":{"line":21,"column":19},"generated":{"line":1,"column":132}},{"source":"../src/index.ts","name":"format","original":{"line":21,"column":8},"generated":{"line":1,"column":136}},{"source":"../src/index.ts","name":"error","original":{"line":22,"column":6},"generated":{"line":1,"column":138}},{"source":"../src/index.ts","name":null,"original":{"line":22,"column":14},"generated":{"line":1,"column":140}},{"source":"../src/index.ts","name":"Error","original":{"line":22,"column":18},"generated":{"line":1,"column":144}},{"source":"../src/index.ts","name":null,"original":{"line":23,"column":8},"generated":{"line":1,"column":150}},{"source":"../src/index.ts","name":null,"original":{"line":26,"column":11},"generated":{"line":1,"column":283}},{"source":"../src/index.ts","name":"argIndex","original":{"line":27,"column":10},"generated":{"line":1,"column":284}},{"source":"../src/index.ts","name":"argIndex","original":{"line":27,"column":10},"generated":{"line":1,"column":288}},{"source":"../src/index.ts","name":null,"original":{"line":27,"column":21},"generated":{"line":1,"column":290}},{"source":"../src/index.ts","name":"error","original":{"line":28,"column":6},"generated":{"line":1,"column":293}},{"source":"../src/index.ts","name":null,"original":{"line":28,"column":14},"generated":{"line":1,"column":295}},{"source":"../src/index.ts","name":"Error","original":{"line":28,"column":18},"generated":{"line":1,"column":299}},{"source":"../src/index.ts","name":"format","original":{"line":29,"column":8},"generated":{"line":1,"column":305}},{"source":"../src/index.ts","name":"replace","original":{"line":29,"column":15},"generated":{"line":1,"column":307}},{"source":"../src/index.ts","name":null,"original":{"line":29,"column":23},"generated":{"line":1,"column":315}},{"source":"../src/index.ts","name":null,"original":{"line":29,"column":30},"generated":{"line":1,"column":321}},{"source":"../src/index.ts","name":"args","original":{"line":30,"column":17},"generated":{"line":1,"column":332}},{"source":"../src/index.ts","name":"args","original":{"line":30,"column":17},"generated":{"line":1,"column":339}},{"source":"../src/index.ts","name":"argIndex","original":{"line":30,"column":22},"generated":{"line":1,"column":341}},{"source":"../src/index.ts","name":"name","original":{"line":33,"column":12},"generated":{"line":1,"column":350}},{"source":"../src/index.ts","name":null,"original":{"line":33,"column":19},"generated":{"line":1,"column":355}},{"source":"../src/index.ts","name":"error","original":{"line":37,"column":10},"generated":{"line":1,"column":377}},{"source":"../src/index.ts","name":"error","original":{"line":36,"column":5},"generated":{"line":1,"column":383}},{"source":"../src/index.ts","name":"framesToPop","original":{"line":36,"column":19},"generated":{"line":1,"column":385}},{"source":"../src/index.ts","name":null,"original":{"line":36,"column":33},"generated":{"line":1,"column":397}},{"source":"../src/index.ts","name":"error","original":{"line":37,"column":10},"generated":{"line":1,"column":399}},{"source":"../src/index.ts","name":"error","original":{"line":37,"column":10},"generated":{"line":1,"column":402}},{"source":"../src/index.ts","name":"error","original":{"line":37,"column":10},"generated":{"line":1,"column":409}},{"source":"../src/index.ts","name":"error","original":{"line":37,"column":10},"generated":{"line":1,"column":424}},{"source":"../src/index.ts","name":"error","original":{"line":37,"column":10},"generated":{"line":1,"column":432}},{"source":"../src/index.ts","name":"error","original":{"line":37,"column":10},"generated":{"line":1,"column":445}},{"source":"../src/index.ts","name":"error","original":{"line":37,"column":10},"generated":{"line":1,"column":446}},{"source":"../src/index.ts","name":"error","original":{"line":37,"column":10},"generated":{"line":1,"column":453}},{"source":"../src/index.ts","name":"error","original":{"line":37,"column":10},"generated":{"line":1,"column":457}},{"source":"../src/index.ts","name":"error","original":{"line":37,"column":10},"generated":{"line":1,"column":465}},{"source":"../src/index.ts","name":"error","original":{"line":37,"column":10},"generated":{"line":1,"column":475}}],"sources":{"../src/index.ts":"/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nexport function invariant(condition: any, format: string, ...args: any[]) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    let error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n          'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      let argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() {\n          return args[argIndex++];\n        })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    (error as any).framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"33bcbb2b92175aa91514d599bb99b865","cacheData":{"env":{"NODE_ENV":"production"}}}